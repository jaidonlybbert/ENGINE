# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Ubuntu-GCC

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  DISPLAY: ':99.0'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -el {0} 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: Engine
          environment-file: environment.yml
          python-version: 3.13
          auto-activate-base: false

      - name: Install GCC
        run: |
          conda info
          conda list
          conda install gcc=15.1.0 -c conda-forge
      - name: Install dependencies (apt)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libgl-dev libglx-dev libx11-dev libxau-dev libxcb1-dev libxdmcp-dev x11proto-dev xorg-sgml-doctools xtrans-dev libpthread-stubs0-dev

      - name: Virtual X server
        if: runner.os == 'Linux'
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Install Conan profile
        run: conan config install ${{github.workspace}}/profiles/Ubuntu-GCC-x86_64 --type=file --target-folder=profiles

      # Fixes conflict between python-setup and conan-setup
      - name: Clear PKG_CONFIG_PATH
        shell: bash
        run: echo "PKG_CONFIG_PATH=" >> $GITHUB_ENV

      - name: Install deps (Conan)
        run: conan install . -pr:a Ubuntu-GCC-x86_64 --output-folder ${{github.workspace}}/build --build=missing

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: 1.3.283.0 # Specify a desired SDK version, or "latest" to use the most recent
          cache: true # Optional: Cache the downloaded installer for faster subsequent builds
        
      - name: Run build script
        run: python ${{github.workspace}}/buildfile.py --buildtype=Release
